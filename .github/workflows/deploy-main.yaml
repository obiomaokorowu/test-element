name: Deploy Infrastructure Resources

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy Infrastructure Resources
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: aws sts get-caller-identity

      - name: Build Docker Image and Extract Layer
        run: |
          # Build the Docker image
          docker build -t pandas-layer - <<EOF
          FROM public.ecr.aws/lambda/python:3.8
          RUN yum install -y zip
          RUN mkdir -p /lambda/python
          RUN pip install --upgrade pandas -t /lambda/python
          RUN pip install --upgrade numpy -t /lambda/python
          CMD ["lambda_function.lambda_handler"]
          EOF

          mkdir -p ${{ github.workspace }}/terraform/infrastructure/python
          rm -rf ${{ github.workspace }}/terraform/infrastructure/python/*
          docker run --rm --entrypoint "" -v ${{ github.workspace }}/terraform/infrastructure/python:/outputs pandas-layer /bin/sh -c "cp -r /lambda/python/* /outputs"

          # Create the ZIP file for the Lambda layer
          cd ${{ github.workspace }}/terraform/infrastructure/python
          zip -r ../pandas_layer.zip .
          cd ..
          ls -la ${{ github.workspace }}/terraform/infrastructure

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.3

      - name: Initialize Terraform
        working-directory: terraform/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform init -reconfigure

      - name: Plan Resources
        working-directory: terraform/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform plan -out=tfplan

      - name: Apply Resources
        working-directory: terraform/infrastructure
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve tfplan
